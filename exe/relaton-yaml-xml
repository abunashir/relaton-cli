#!/usr/bin/env ruby

require "yaml"
require "optparse"
require "fileutils"
require "relaton/cli"

options = {
  extension: ".rxl",
  prefix: ""
}

opt_parser = OptionParser.new do |opts|
  opts.banner += " <file>"

  opts.on(
    '-r',
    '--require LIBRARY',
    'Require LIBRARY prior to execution'
  ) { |v|
    options[:require] ||= []
    options[:require] << v
  }

  opts.on(
    '-R OUTDIR',
    '--relaton-outdir OUTDIR',
    "Create Relaton XML per item, within this output directory (e.g. {outdir}/{docidentifier}.xml)"
  ) { |v| options[:outdir] = v }

  opts.on(
    '-x EXT',
    '--relaton-ext EXT',
    "File extension of Relaton XML files, defaults to '.rxl'"
  ) { |v| options[:extension] = v }

  opts.on(
    '-p PREFIX',
    '--prefix PREFIX',
    "Filename prefix of Relaton XML files, defaults to empty"
  ) { |v| options[:prefix] = v }

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

opt_parser.parse!(ARGV)
options[:filename] = ARGV.pop

if options[:require]
  options[:require].each do |r|
    require r
  end
end

index_input = YAML.load_file(options[:filename])
index_collection = ::Relaton::Bibcollection.new(index_input["root"])

# TODO real lookup of namespaces and root elements

# Write out index.html
outfilename = options[:filename].sub(/\.[^.]+$/, ".xml")
File.open(outfilename, "w") do |f|
  f.write index_collection.to_xml
end

outdir = options[:outdir]

if outdir
  FileUtils.mkdir_p(outdir)
  # Write out relaton/#{id}.xml
  index_collection.items_flattened.each do |item|
    filename = File.join(outdir, "#{options[:prefix]}#{item.docidentifier_code}#{options[:extension]}")

    File.open(filename, "w:UTF-8") do |f|
      f.write(item.to_xml)
    end

  end
end

